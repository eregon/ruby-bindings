#ifndef LIB_RUBY_PARSER_CONVERT_H
#define LIB_RUBY_PARSER_CONVERT_H

#include <ruby.h>
#include "../lib-ruby-parser.h"

VALUE convert_Alias(struct Alias *node);
VALUE convert_AndAsgn(struct AndAsgn *node);
VALUE convert_And(struct And *node);
VALUE convert_Arg(struct Arg *node);
VALUE convert_Args(struct Args *node);
VALUE convert_Array(struct Array *node);
VALUE convert_ArrayPattern(struct ArrayPattern *node);
VALUE convert_ArrayPatternWithTail(struct ArrayPatternWithTail *node);
VALUE convert_BackRef(struct BackRef *node);
VALUE convert_Begin(struct Begin *node);
VALUE convert_Block(struct Block *node);
VALUE convert_BlockPass(struct BlockPass *node);
VALUE convert_Blockarg(struct Blockarg *node);
VALUE convert_Break(struct Break *node);
VALUE convert_Case(struct Case *node);
VALUE convert_CaseMatch(struct CaseMatch *node);
VALUE convert_Casgn(struct Casgn *node);
VALUE convert_Cbase(struct Cbase *node);
VALUE convert_Class(struct Class *node);
VALUE convert_Complex(struct Complex *node);
VALUE convert_Const(struct Const *node);
VALUE convert_ConstPattern(struct ConstPattern *node);
VALUE convert_CSend(struct CSend *node);
VALUE convert_Cvar(struct Cvar *node);
VALUE convert_Cvasgn(struct Cvasgn *node);
VALUE convert_Def(struct Def *node);
VALUE convert_Defined(struct Defined *node);
VALUE convert_Defs(struct Defs *node);
VALUE convert_Dstr(struct Dstr *node);
VALUE convert_Dsym(struct Dsym *node);
VALUE convert_EFlipFlop(struct EFlipFlop *node);
VALUE convert_EmptyElse(struct EmptyElse *node);
VALUE convert_Encoding(struct Encoding *node);
VALUE convert_Ensure(struct Ensure *node);
VALUE convert_Erange(struct Erange *node);
VALUE convert_False(struct False *node);
VALUE convert_File(struct File *node);
VALUE convert_FindPattern(struct FindPattern *node);
VALUE convert_Float(struct Float *node);
VALUE convert_For(struct For *node);
VALUE convert_ForwardArg(struct ForwardArg *node);
VALUE convert_ForwardedArgs(struct ForwardedArgs *node);
VALUE convert_Gvar(struct Gvar *node);
VALUE convert_Gvasgn(struct Gvasgn *node);
VALUE convert_Hash(struct Hash *node);
VALUE convert_Kwargs(struct Kwargs *node);
VALUE convert_HashPattern(struct HashPattern *node);
VALUE convert_Heredoc(struct Heredoc *node);
VALUE convert_If(struct If *node);
VALUE convert_IfGuard(struct IfGuard *node);
VALUE convert_IfMod(struct IfMod *node);
VALUE convert_IfTernary(struct IfTernary *node);
VALUE convert_IFlipFlop(struct IFlipFlop *node);
VALUE convert_MatchPattern(struct MatchPattern *node);
VALUE convert_MatchPatternP(struct MatchPatternP *node);
VALUE convert_InPattern(struct InPattern *node);
VALUE convert_Index(struct Index *node);
VALUE convert_IndexAsgn(struct IndexAsgn *node);
VALUE convert_Int(struct Int *node);
VALUE convert_Irange(struct Irange *node);
VALUE convert_Ivar(struct Ivar *node);
VALUE convert_Ivasgn(struct Ivasgn *node);
VALUE convert_Kwarg(struct Kwarg *node);
VALUE convert_KwBegin(struct KwBegin *node);
VALUE convert_Kwnilarg(struct Kwnilarg *node);
VALUE convert_Kwoptarg(struct Kwoptarg *node);
VALUE convert_Kwrestarg(struct Kwrestarg *node);
VALUE convert_Kwsplat(struct Kwsplat *node);
VALUE convert_Lambda(struct Lambda *node);
VALUE convert_Line(struct Line *node);
VALUE convert_Lvar(struct Lvar *node);
VALUE convert_Lvasgn(struct Lvasgn *node);
VALUE convert_Masgn(struct Masgn *node);
VALUE convert_MatchAlt(struct MatchAlt *node);
VALUE convert_MatchAs(struct MatchAs *node);
VALUE convert_MatchCurrentLine(struct MatchCurrentLine *node);
VALUE convert_MatchNilPattern(struct MatchNilPattern *node);
VALUE convert_MatchRest(struct MatchRest *node);
VALUE convert_MatchVar(struct MatchVar *node);
VALUE convert_MatchWithLvasgn(struct MatchWithLvasgn *node);
VALUE convert_Mlhs(struct Mlhs *node);
VALUE convert_Module(struct Module *node);
VALUE convert_Next(struct Next *node);
VALUE convert_Nil(struct Nil *node);
VALUE convert_NthRef(struct NthRef *node);
VALUE convert_Numblock(struct Numblock *node);
VALUE convert_OpAsgn(struct OpAsgn *node);
VALUE convert_Optarg(struct Optarg *node);
VALUE convert_Or(struct Or *node);
VALUE convert_OrAsgn(struct OrAsgn *node);
VALUE convert_Pair(struct Pair *node);
VALUE convert_Pin(struct Pin *node);
VALUE convert_Postexe(struct Postexe *node);
VALUE convert_Preexe(struct Preexe *node);
VALUE convert_Procarg0(struct Procarg0 *node);
VALUE convert_Rational(struct Rational *node);
VALUE convert_Redo(struct Redo *node);
VALUE convert_RegOpt(struct RegOpt *node);
VALUE convert_Regexp(struct Regexp *node);
VALUE convert_Rescue(struct Rescue *node);
VALUE convert_RescueBody(struct RescueBody *node);
VALUE convert_Restarg(struct Restarg *node);
VALUE convert_Retry(struct Retry *node);
VALUE convert_Return(struct Return *node);
VALUE convert_SClass(struct SClass *node);
VALUE convert_Self_(struct Self_ *node);
VALUE convert_Send(struct Send *node);
VALUE convert_Shadowarg(struct Shadowarg *node);
VALUE convert_Splat(struct Splat *node);
VALUE convert_Str(struct Str *node);
VALUE convert_Super(struct Super *node);
VALUE convert_Sym(struct Sym *node);
VALUE convert_True(struct True *node);
VALUE convert_Undef(struct Undef *node);
VALUE convert_UnlessGuard(struct UnlessGuard *node);
VALUE convert_Until(struct Until *node);
VALUE convert_UntilPost(struct UntilPost *node);
VALUE convert_When(struct When *node);
VALUE convert_While(struct While *node);
VALUE convert_WhilePost(struct WhilePost *node);
VALUE convert_XHeredoc(struct XHeredoc *node);
VALUE convert_Xstr(struct Xstr *node);
VALUE convert_Yield(struct Yield *node);
VALUE convert_ZSuper(struct ZSuper *node);

VALUE convert_Node(struct Node* node);

void InitNodeClasses(VALUE lib_ruby_parser_mod);

#endif // LIB_RUBY_PARSER_CONVERT_H
