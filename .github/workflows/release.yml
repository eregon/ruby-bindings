name: release

on:
  push:
    tags:
      - 'v*'

defaults:
  run:
    shell: bash

jobs:
  # outputs ${{ needs.get-gem-version.outputs.gem-version }}
  get-gem-version:
    uses: lib-ruby-parser/ruby-bindings/.github/workflows/get-gem-version.yml@master

  # Build .so/.bundle files, test and upload them as build artifacts
  compile-and-test-mac:
    uses: lib-ruby-parser/ruby-bindings/.github/workflows/compile-and-test-one.yml@master
    with:
      runs-on: macos-latest
      target: x86_64-apple-darwin
      ruby: '3.0'
      file-to-upload: lib/lib-ruby-parser/native/lib_ruby_parser.bundle

  compile-and-test-linux:
    uses: lib-ruby-parser/ruby-bindings/.github/workflows/compile-and-test-one.yml@master
    with:
      runs-on: ubuntu-latest
      target: x86_64-unknown-linux-gnu
      ruby: '3.0'
      file-to-upload: lib/lib-ruby-parser/native/lib_ruby_parser.so

  compile-and-test-windows-old:
    uses: lib-ruby-parser/ruby-bindings/.github/workflows/compile-and-test-one.yml@master
    with:
      runs-on: windows-latest
      target: x86_64-pc-windows-gnu
      ruby: '2.6'
      file-to-upload: lib/lib-ruby-parser/native/2.6/lib_ruby_parser.so

  compile-and-test-windows:
    uses: lib-ruby-parser/ruby-bindings/.github/workflows/compile-and-test-one.yml@master
    with:
      runs-on: windows-latest
      target: x86_64-pc-windows-gnu
      ruby: '2.7'
      file-to-upload: lib/lib-ruby-parser/native/2.7/lib_ruby_parser.so

  compile-and-test-windows-new:
    uses: lib-ruby-parser/ruby-bindings/.github/workflows/compile-and-test-one.yml@master
    with:
      runs-on: windows-latest
      target: x86_64-pc-windows-gnu
      ruby: '3.0'
      file-to-upload: lib/lib-ruby-parser/native/3.0/lib_ruby_parser.so

  # Download .so/.bundle artifacts, pack .gem files and upload them as artifacts
  build-mac-gem:
    needs:
      - get-gem-version
      - compile-and-test-mac
    uses: lib-ruby-parser/ruby-bindings/.github/workflows/build-gem.yml@master
    with:
      runs-on: macos-latest
      make-target: x86_64-apple-darwin
      ruby-platform: x86_64-darwin
      gem-version: ${{ needs.get-gem-version.outputs.gem-version }}
      artifact1-name: ${{ needs.compile-and-test-mac.outputs.artifact-name }}
      artifact1-path: lib/lib-ruby-parser/native/lib_ruby_parser.bundle

  build-linux-gem:
    needs:
      - get-gem-version
      - compile-and-test-linux
    uses: lib-ruby-parser/ruby-bindings/.github/workflows/build-gem.yml@master
    with:
      runs-on: ubuntu-latest
      make-target: x86_64-unknown-linux-gnu
      ruby-platform: x86_64-linux
      gem-version: ${{ needs.get-gem-version.outputs.gem-version }}
      artifact1-name: ${{ needs.compile-and-test-linux.outputs.artifact-name }}
      artifact1-path: lib/lib-ruby-parser/native/lib_ruby_parser.so

  build-windows-gem:
    needs:
      - get-gem-version
      - compile-and-test-windows-old
      - compile-and-test-windows
      - compile-and-test-windows-new
    uses: lib-ruby-parser/ruby-bindings/.github/workflows/build-gem.yml@master
    with:
      runs-on: windows-latest
      make-target: x86_64-pc-windows-gnu
      ruby-platform: x64-mingw32
      gem-version: ${{ needs.get-gem-version.outputs.gem-version }}
      artifact1-name: ${{ needs.compile-and-test-windows-old.outputs.artifact-name }}
      artifact1-path: lib/lib-ruby-parser/native/2.6/lib_ruby_parser.so
      artifact2-name: ${{ needs.compile-and-test-windows.outputs.artifact-name }}
      artifact2-path: lib/lib-ruby-parser/native/2.7/lib_ruby_parser.so
      artifact3-name: ${{ needs.compile-and-test-windows-new.outputs.artifact-name }}
      artifact3-path: lib/lib-ruby-parser/native/3.0/lib_ruby_parser.so

  # download .gem artifacts, "gem install" them and run very naive smoke test
  test-gems:
    needs:
      - build-mac-gem
      - build-linux-gem
      - build-windows-gem
    name: test gem on ${{ matrix.ruby }} / ${{ matrix.build.os }}
    runs-on: ${{ matrix.build.os }}
    strategy:
      fail-fast: false
      matrix:
        ruby: ['2.6', '2.7', '3.0']
        build:
          - os: 'macos-latest'
            gem-artifact-name: ${{ needs.build-mac-gem.outputs.gem-artifact-name }}

          - os: 'ubuntu-latest'
            gem-artifact-name: ${{ needs.build-linux-gem.outputs.gem-artifact-name }}

          - os: 'windows-latest'
            gem-artifact-name: ${{ needs.build-windows-gem.outputs.gem-artifact-name }}
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: install ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}

      - name: download .gem artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.build.gem-artifact-name }}

      - name: install gem
        shell: bash
        run: gem install ${{ matrix.build.gem-artifact-name }}

      - name: run smoke test
        shell: bash
        run: ruby -rlib-ruby-parser -e "pp LibRubyParser.parse('42', {})"

  publish-gems:
    needs:
      - build-mac-gem
      - build-linux-gem
      - build-windows-gem
      - test-gems
    name: publish all gems
    runs-on: ubuntu-latest
    env:
      GEM_HOST_API_KEY: ${{ secrets.RUBYGEMS_API_TOKEN }}
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: install ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'

      - name: download mac .gem artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ needs.build-mac-gem.outputs.gem-artifact-name }}

      - name: download linux .gem artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ needs.build-linux-gem.outputs.gem-artifact-name }}

      - name: download windows .gem artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ needs.build-windows-gem.outputs.gem-artifact-name }}

      - name: push gems
        run: |
          gem push ${{ needs.build-mac-gem.outputs.gem-artifact-name }}
          gem push ${{ needs.build-linux-gem.outputs.gem-artifact-name }}
          gem push ${{ needs.build-windows-gem.outputs.gem-artifact-name }}
