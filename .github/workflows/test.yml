name: test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: ${{ matrix.build.target }} / ruby ${{ matrix.ruby }}
    runs-on: ${{ matrix.build.os }}
    env:
      CARGO_BUILD_TARGET: ${{ matrix.build.target }}
      CC: ${{ matrix.build.cc }}
      CXX: ${{ matrix.build.cxx }}
      LD: ${{ matrix.build.ld }}
      CARGOFLAGS: ${{ matrix.build.cargoflags }}
    strategy:
      fail-fast: false
      matrix:
        ruby:
          # - '2.6'
          # - '2.7'
          - '3.0'
        build:
          # - os: ubuntu-latest
          #   target: x86_64-unknown-linux-gnu
          #   cc: clang-9
          #   cxx: clang++-9
          #   ld: ld.lld-9
          #   run: rake

          # - os: macos-latest
          #   target: x86_64-apple-darwin
          #   cc: clang
          #   cxx: clang++
          #   ld: ld
          #   run: rake

          - os: windows-latest
            target: x86_64-pc-windows-gnu
            cc: x86_64-w64-mingw32-gcc
            cxx: x86_64-w64-mingw32-g++
            ld: ld
            run: rake
    steps:
      - name: show env
        shell: bash
        run: |
          x86_64-w64-mingw32-gcc --help
          which ld
          ld --help

      # - name: show compilers
      #   shell: bash
      #   run: |
      #     which $CC
      #     which $LD

      - name: checkout
        uses: actions/checkout@v2

      - name: install ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}

      - name: print-env
        shell: bash
        run: make print-env

      # - name: setup msvc on windows
      #   if: runner.os == 'Windows'
      #   uses: ilammy/msvc-dev-cmd@v1

      # - name: fix linker on windows
      #   if: runner.os == 'Windows'
      #   run: |
      #     rm "C:\\Program Files\\Git\\usr\\bin\\link.exe"
      #     which -a link.exe

      - name: install wget
        if: runner.os == 'Windows'
        shell: bash
        run: choco install wget --no-progress

      - name: install rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.build.target }}
          override: true

      - name: run bundler
        shell: bash
        run: |
          gem install bundler
          bundle install

      - name: run tests
        shell: bash
        run: |
          make setup
          make download-c-bindings
          make generate-ruby-bindings
          ${{ matrix.build.run }}
